(base) usamafaheem@wifi-10-41-110-38 ~ % git clone https://github.com/usamafication/GitHub-Collaboration-Practice.git
Cloning into 'GitHub-Collaboration-Practice'...
remote: Enumerating objects: 6, done.
remote: Counting objects: 100% (6/6), done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 6 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
Receiving objects: 100% (6/6), done.
(base) usamafaheem@wifi-10-41-110-38 ~ % ls
Applications
CSS
CSS-Challenge-3
Computational-Social-Science-Training-Program
Creative Cloud Files
Desktop
Documents
Downloads
GitHub-Collaboration-Practice
Library
Movies
Music
Pictures
Public
git-challenges
my-first-repo
newdir
(base) usamafaheem@wifi-10-41-110-38 ~ % cd GitHub-Collaboration-Practice
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % ls
Group UT	README.md
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git checkout -b new_branch2
Switched to a new branch 'new_branch2'
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % ls
Group UT	README.md
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % vim Group UT
2 files to edit
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % vim Group UT
2 files to edit
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % vim "Group UT"
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git add 
Nothing specified, nothing added.
hint: Maybe you wanted to say 'git add .'?
hint: Turn this message off by running
hint: "git config advice.addEmptyPathspec false"
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git add *
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git commit
Aborting commit due to empty commit message.
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git commit "new elements added"
error: pathspec 'new elements added' did not match any file(s) known to git
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git commit "Group UT"
Aborting commit due to empty commit message.
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % vim "Group UT"
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git commit -m "new elements added"
[new_branch2 7ca8fff] new elements added
 2 files changed, 1 insertion(+)
 create mode 100644 Group
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git push
fatal: The current branch new_branch2 has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin new_branch2

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.

(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git push --set-upstream origin new_branch2
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 375 bytes | 375.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
remote: 
remote: Create a pull request for 'new_branch2' on GitHub by visiting:
remote:      https://github.com/usamafication/GitHub-Collaboration-Practice/pull/new/new_branch2
remote: 
To https://github.com/usamafication/GitHub-Collaboration-Practice.git
 * [new branch]      new_branch2 -> new_branch2
branch 'new_branch2' set up to track 'origin/new_branch2'.
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git pull
Already up to date.
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git pull 
From https://github.com/usamafication/GitHub-Collaboration-Practice
 * [new branch]      new_branch -> origin/new_branch
Already up to date.
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % switch main
zsh: command not found: switch
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git switch main
Switched to branch 'main'
Your branch is up to date with 'origin/main'.
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % vim "Group UT"
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git add *
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git commit -m 
error: switch `m' requires a value
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git commit -m "new added values"
[main e7cbeb2] new added values
 1 file changed, 1 insertion(+)
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 341 bytes | 341.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/usamafication/GitHub-Collaboration-Practice.git
   e3db134..e7cbeb2  main -> main
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git switch new_branch2
Switched to branch 'new_branch2'
Your branch is up to date with 'origin/new_branch2'.
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % vim "Group UT"
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git add *
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git commit -m "branch update"
[new_branch2 b326445] branch update
 1 file changed, 2 insertions(+)
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git push
To https://github.com/usamafication/GitHub-Collaboration-Practice.git
 ! [rejected]        new_branch2 -> new_branch2 (fetch first)
error: failed to push some refs to 'https://github.com/usamafication/GitHub-Collaboration-Practice.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git pull
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 2 (delta 0), reused 1 (delta 0), pack-reused 0 (from 0)
Unpacking objects: 100% (2/2), 920 bytes | 460.00 KiB/s, done.
From https://github.com/usamafication/GitHub-Collaboration-Practice
   7ca8fff..24b5c44  new_branch2 -> origin/new_branch2
hint: You have divergent branches and need to specify how to reconcile them.
hint: You can do so by running one of the following commands sometime before
hint: your next pull:
hint: 
hint:   git config pull.rebase false  # merge
hint:   git config pull.rebase true   # rebase
hint:   git config pull.ff only       # fast-forward only
hint: 
hint: You can replace "git config" with "git config --global" to set a default
hint: preference for all repositories. You can also pass --rebase, --no-rebase,
hint: or --ff-only on the command line to override the configured default per
hint: invocation.
fatal: Need to specify how to reconcile divergent branches.
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git commit -m "files shift"
On branch new_branch2
Your branch and 'origin/new_branch2' have diverged,
and have 1 and 1 different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)

nothing to commit, working tree clean
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git pull
remote: Enumerating objects: 11, done.
remote: Counting objects: 100% (11/11), done.
remote: Compressing objects: 100% (7/7), done.
remote: Total 7 (delta 1), reused 3 (delta 0), pack-reused 0 (from 0)
Unpacking objects: 100% (7/7), 2.19 KiB | 373.00 KiB/s, done.
From https://github.com/usamafication/GitHub-Collaboration-Practice
   e7cbeb2..0da8b8d  main       -> origin/main
   e3db134..14918f5  new_branch -> origin/new_branch
hint: You have divergent branches and need to specify how to reconcile them.
hint: You can do so by running one of the following commands sometime before
hint: your next pull:
hint: 
hint:   git config pull.rebase false  # merge
hint:   git config pull.rebase true   # rebase
hint:   git config pull.ff only       # fast-forward only
hint: 
hint: You can replace "git config" with "git config --global" to set a default
hint: preference for all repositories. You can also pass --rebase, --no-rebase,
hint: or --ff-only on the command line to override the configured default per
hint: invocation.
fatal: Need to specify how to reconcile divergent branches.
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git swtich main
git: 'swtich' is not a git command. See 'git --help'.

The most similar command is
	switch
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git pull
hint: You have divergent branches and need to specify how to reconcile them.
hint: You can do so by running one of the following commands sometime before
hint: your next pull:
hint: 
hint:   git config pull.rebase false  # merge
hint:   git config pull.rebase true   # rebase
hint:   git config pull.ff only       # fast-forward only
hint: 
hint: You can replace "git config" with "git config --global" to set a default
hint: preference for all repositories. You can also pass --rebase, --no-rebase,
hint: or --ff-only on the command line to override the configured default per
hint: invocation.
fatal: Need to specify how to reconcile divergent branches.
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git switch main
Switched to branch 'main'
Your branch is behind 'origin/main' by 3 commits, and can be fast-forwarded.
  (use "git pull" to update your local branch)
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git pull
Updating e7cbeb2..0da8b8d
Fast-forward
 Group UT | 2 ++
 1 file changed, 2 insertions(+)
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git switch new_branch2
Switched to branch 'new_branch2'
Your branch and 'origin/new_branch2' have diverged,
and have 1 and 1 different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git switch main
Switched to branch 'main'
Your branch is up to date with 'origin/main'.
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % ls
Group UT	README.md
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % vim "Group UT"
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % vim "Group UT"
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git switch new_branch2
error: Your local changes to the following files would be overwritten by checkout:
	Group UT
Please commit your changes or stash them before you switch branches.
Aborting
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git commit -m "changing"
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   Group UT

no changes added to commit (use "git add" and/or "git commit -a")
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git switch new_branch2
error: Your local changes to the following files would be overwritten by checkout:
	Group UT
Please commit your changes or stash them before you switch branches.
Aborting
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git push
Everything up-to-date
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git switch new_branch2
error: Your local changes to the following files would be overwritten by checkout:
	Group UT
Please commit your changes or stash them before you switch branches.
Aborting
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git add *
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git commit -m "changes"
[main e69e3e5] changes
 1 file changed, 1 insertion(+), 1 deletion(-)
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 302 bytes | 302.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/usamafication/GitHub-Collaboration-Practice.git
   0da8b8d..e69e3e5  main -> main
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git switch new_branch2
Switched to branch 'new_branch2'
Your branch and 'origin/new_branch2' have diverged,
and have 1 and 1 different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git pull
hint: You have divergent branches and need to specify how to reconcile them.
hint: You can do so by running one of the following commands sometime before
hint: your next pull:
hint: 
hint:   git config pull.rebase false  # merge
hint:   git config pull.rebase true   # rebase
hint:   git config pull.ff only       # fast-forward only
hint: 
hint: You can replace "git config" with "git config --global" to set a default
hint: preference for all repositories. You can also pass --rebase, --no-rebase,
hint: or --ff-only on the command line to override the configured default per
hint: invocation.
fatal: Need to specify how to reconcile divergent branches.
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git config --global
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <type>     value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry

(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git config pull.rebase false
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git pull
Merge made by the 'ort' strategy.
 Group | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 delete mode 100644 Group
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git switch new_branch 2
fatal: only one reference expected
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git switch new_branch2
Already on 'new_branch2'
Your branch is ahead of 'origin/new_branch2' by 2 commits.
  (use "git push" to publish your local commits)
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git push
Enumerating objects: 9, done.
Counting objects: 100% (8/8), done.
Delta compression using up to 8 threads
Compressing objects: 100% (5/5), done.
Writing objects: 100% (5/5), 734 bytes | 734.00 KiB/s, done.
Total 5 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/usamafication/GitHub-Collaboration-Practice.git
   24b5c44..9f4656d  new_branch2 -> new_branch2
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git switch new_branch2
Already on 'new_branch2'
Your branch is up to date with 'origin/new_branch2'.
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % vim "Group UT"
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % vim "Group UT"
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % touch codeforproject
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % vim codeforproject
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git add *
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git commit -m "code added here"
(base) usamafaheem@wifi-10-41-110-38 GitHub-Collaboration-Practice % git push


